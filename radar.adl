module radar {

type DisplayName = String;
type MinSumLengthOfVectorFields = Word32;

// ---------------------------------------

struct Radar {
    Quadrant tools;
    Quadrant platforms;
    Quadrant processes;
    @DisplayName "languages & frameworks"
    Quadrant lang_framework;
};

@MinSumLengthOfVectorFields 1
struct Quadrant {
    Vector<Entry> adopt;
    Vector<Entry> trial;
    Vector<Entry> access;
    Vector<Entry> hold;
};

struct Entry {
    Nullable<String> sponsor = null;
    String name;
    Bool isNew;
    Vector<String> description;
};

// ---------------------------------------

@MinSumLengthOfVectorFields 1
struct Radar_Proc_Step_01 {
    Vector<EntryWithQuadrant> adopt;
    Vector<EntryWithQuadrant> trial;
    Vector<EntryWithQuadrant> access;
    Vector<EntryWithQuadrant> hold;
};

struct EntryWithQuadrant {
    Nullable<String> sponsor = null;
    String name;
    String quadrant;
    Bool isNew;
    Vector<String> description;
};

// ---------------------------------------

type RadarOutput = Vector<OutputEntry>;

struct OutputEntry {
    Nullable<String>  sponsor;
    String name;
    String quadrant;
    String ring;
    String isNew;
    String description;
};

// ---------------------------------------

struct Data {
  Radar helix = {
    "tools": {
        "adopt": [
            {
                "name": "Gradle",
                "isNew": true,
                "description": [
                    "Gradle build system"
                ]
            }
        ],
        "trial": [],
        "access": [],
        "hold": []
    },
    "platforms": {
        "adopt": [
            {
                "name": "Lambdas",
                "isNew": false,
                "description": [
                    "Move deployment of Lambdas from Infra to app deployment"
                ]
            }
        ],
        "trial": [],
        "access": [],
        "hold": []
    },
    "processes": {
        "adopt": [
            {
                "name": "Github Projects",
                "isNew": false,
                "description": [
                    "Lite weight semi-automated task management for PRs and Issues"
                ]
            }
        ],
        "trial": [],
        "access": [],
        "hold": []
    },
    "lang_framework": {
        "adopt": [
            {
                "name": "ADL",
                "isNew": false,
                "description": [
                    "Algebraic Data Language (https://github.com/helix-collective/adl).",
                    "Conceptually equivalent to Google's Protobuf, designed specifically for data modelling."
                ]
            }
        ],
        "trial": [],
        "access": [],
        "hold": []
    }
  };
};


};
